import showSubCategories

// Ceci est un commentaire, ils commencent tous par //
// Le CSML ignore les commentaires, ils sont utiles pour les d√©veloppeurs :3

// Un chatbot commence toujours par l'√©tape "start" ci-dessous
start:
  // On va saluer l'utilisateur avec la commande `say`
  say "Salut!"
  say Typing(3000)
  say "Je suis Actibot, le bot qui te trouve des activit√©s au top dans Paris! ü§ô"
  // On peut poser une question √† l'utilisateur et donner des choix de boutons
  say Question("Tu es pr√™t.e ?",
    buttons=[
      // Vous remarquerez qu'on utilise le mot cl√© "as", il permet au csml de se souvenir de ce bouton
      // pour s'en servir plus tard (dans le if)
      Button("Oui let's gooo! üî•") as btnOui,
      Button("Pas tout √† fait üòï") as btnNon
    ])
  // "hold" indique au chatbot qu'il doit attendre une r√©ponse de l'utilisateur (une phrase ou un click)
	hold
  // La r√©ponse de l'utilisateur va arriver dans la variable `event`
  // Dans le cas pr√©sent on va voir ce que contient cette variable en demandant au csml si event "match" le bouton Oui
  if (event match btnOui) {
    say "Super allons-y!"
  } else {
    say "Pas de soucis, je me tiens √† ta disposition!"
    goto end
  }
  
// ############################################################
// √Ä toi de jouer maintenant, il va falloir remplir les trous !
// ############################################################
// Exercice 0 : Efface la ligne ci-dessous pour commencer le workshop

  remember category = false
  remember subCategory = false
  remember price = false

  say "Fais moi confiance je vais trouver l'activit√© id√©ale pour toi."
  say "J'ai juste besoin de te poser quelques questions üßê."
	goto categories

categories:
  // 1 - Il manque un mot cl√© pour poser la question
	???? Question("Quelle cat√©gorie d'activit√© pr√©f√®res-tu?",
	buttons=[
    Button("Animations"),
    Button("Concerts"),
    Button("Evenements"),
    Button("Expositions"),
    Button("Spectacles")
		])
  // 2 - Indique au chatbot d'attendre la r√©ponse de l'utilisateur ici
	????
  // 3 - Le chatbot doit se souvenir de la variable `category`
	???? category = event
  goto subcategories


// 4 - Il faut nommer l'√©tape ci-dessous
????:
  // 5 - Tu dois ajouter le mot cl√© manquant pour que √ßa marche
  say ????("Voici les sous cat√©gories que j'ai dans la cat√©gorie {{category}}",
	buttons=showSubCategories(category))
  hold
  // 7 - Tu dois te souvenir de la saisie de l'utilisateur en la mettant dans la variable subCategory
  ???? ???? = ????
  goto price
  
price:
  // 9 - Il manque BEAUCOUP de chose ci-dessous
  ????"Pr√©f√®res-tu les √©v√©nements gratuits ou payants ?",
	????
		Button("gratuit"),
		Button("payant")
  ????
  ????
  remember price = event
  // 10 - Indique au chatbot qu'il doit se rendre √† l'√©tape results`
  ???? results

results:
	say "Roulement de tambours ü•Å"
	say Typing(3000)
  do res = App("Activites", category=category, price=price)
  do cards = []
  if (res.length() == 0) {
    say "Je n'ai pas trouv√© d'activit√©s, d√©sol√© üòî"
    goto start
  }
  foreach (val, index) in res {
    do newCard = Card(
      title=val.fields.title,
      subtitle="{{val.fields.price_type}}‚Ç¨ - {{val.fields.address_name}}",
      image_url=val.fields.cover_url
    )
    if (index < 6) do cards.push(newCard)
  }
  say Carousel(
    cards = cards
  )
  say "tu trouveras plus d'informations sur https://quefaire.paris.fr üî•"
  goto end